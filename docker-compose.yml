version: "3.2"

networks:
  internal:
  external:
    driver: bridge

volumes:
  postgres:
  minio:
  mongodb:
  tripnjoy-grafana:

services:
  configserver:
    build: modules/configserver/
    networks:
      - internal
    ports:
      - "8888:8888"
    environment:
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.cloud.config.server.git.username=GabRayz"
      - "spring.cloud.config.server.git.password=LGU-WXH-GTX-X4q"

  chat:
    build: modules/chat/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8090:8090"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  eureka:
    build: modules/eureka/
    networks:
      - internal
    ports:
      - "8761:8761"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"

  expenses:
    build: modules/expenses/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8089:8089"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  gateway:
    build: modules/gateway/
    depends_on:
      - configserver
    networks:
      - internal
      - external
    ports:
      - "8080:8080"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  groups:
    build: modules/groups/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8082:8082"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  mails:
    build: modules/mails/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8085:8085"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  places:
    build: modules/places/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8087:8087"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  planning:
    build: modules/planning/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8088:8088"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  profiles:
    build: modules/profiles/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8083:8083"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  users:
    build: modules/users/
    depends_on:
      - configserver
    networks:
      - internal
    ports:
      - "8081:8081"
    environment:
      - "spring.datasource.url=jdbc:postgresql://db:5432/postgres"
      - "spring.data.mongodb.host=mongo"
      - "spring.profiles.active=${PROFILE:-default}"
      - "spring.boot.admin.client.url=http://admin:8084"
      - "spring.config.import=configserver:http://configserver:8888"
      - "eureka.client.service-url.defaultZone=http://eureka:8761"

  db:
    image: "postgres:13.6"
    ports:
      - "5432:5432"
    networks:
      - internal
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - "./sql/db_tripnjoy.sql:/docker-entrypoint-initdb.d/init.sql"
    environment:
      - "POSTGRES_PASSWORD=root"
      - "POSTGRES_USER=root"
      - "POSTGRES_DB=postgres"

  mongo:
    image: "mongo:latest"
    ports:
      - "27017:27017"
    volumes:
      - mongodb
    networks:
      - internal

  minio:
    image: "quay.io/minio/minio"
    networks:
      - external
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - "MINIO_ROOT_USER=${MINIO_USER:-root}"
      - "MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-root}"
    volumes:
      - "minio:/data"

  grafana:
    image: "grafana/grafana-oss:latest"
    networks:
      - internal
      - external
    ports:
      - "3001:3000"
    volumes:
      - "tripnjoy-grafana:/var/lib/grafana"
      - "./grafana.ini:/etc/grafana/grafana.ini"

  prometheus:
    image: "prom/prometheus"
    networks:
      - internal
    ports:
      - "9091:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  admin:
    image: "gabray/tripnjoy_admin"
    networks:
      - internal
    ports:
      - "8084:8084"
